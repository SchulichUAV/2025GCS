{"ast":null,"code":"// import React, { useState } from \"react\";\n\n// // Main AI Panel Component\n// const AIPanel = ({ data }) => {\n//   return (\n//     <div className=\"altitude-panel py-6 px-10 max-w-3xl w-full mx-auto space-y-4 bg-white rounded-xl shadow-lg\">\n//       <h1 className=\"text-2xl font-bold mb-4\">AI Predictions Panel</h1>\n//       {data.predictions.map((prediction, index) => (\n//         <PredictionPanel key={index} prediction={prediction} index={index} />\n//       ))}\n//     </div>\n//   );\n// };\n\n// // Prediction Panel with Collapsible Dropdown\n// const PredictionPanel = ({ prediction, index }) => {\n//   const [isOpen, setIsOpen] = useState(false);\n\n//   return (\n//     <div className=\"prediction-panel bg-gray-100 p-4 rounded-lg shadow-md\">\n//       {/* Dropdown Header */}\n//       <div\n//         className=\"flex justify-between items-center cursor-pointer\"\n//         onClick={() => setIsOpen(!isOpen)}\n//       >\n//         <h3 className=\"text-lg font-bold\">\n//           Prediction {index + 1} - Class: {prediction.class}\n//         </h3>\n//         <button className=\"text-gray-500\">{isOpen ? \"▲\" : \"▼\"}</button>\n//       </div>\n\n//       {/* Dropdown Content */}\n//       {isOpen && (\n//         <div className=\"mt-4 space-y-2\">\n//           <p>\n//             <strong>X:</strong> {prediction.x}\n//           </p>\n//           <p>\n//             <strong>Y:</strong> {prediction.y}\n//           </p>\n//           <p>\n//             <strong>Confidence:</strong> {Math.round(prediction.confidence * 100)}%\n//           </p>\n//           <p>\n//             <strong>Class:</strong> {prediction.class}\n//           </p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default AIPanel;","map":{"version":3,"names":[],"sources":["C:/Users/shahe/OneDrive/Desktop/UofC/SUAV/2025GCS/2025gcs/frontend/src/Components/AI/AIPanel.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n\r\n// // Main AI Panel Component\r\n// const AIPanel = ({ data }) => {\r\n//   return (\r\n//     <div className=\"altitude-panel py-6 px-10 max-w-3xl w-full mx-auto space-y-4 bg-white rounded-xl shadow-lg\">\r\n//       <h1 className=\"text-2xl font-bold mb-4\">AI Predictions Panel</h1>\r\n//       {data.predictions.map((prediction, index) => (\r\n//         <PredictionPanel key={index} prediction={prediction} index={index} />\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// // Prediction Panel with Collapsible Dropdown\r\n// const PredictionPanel = ({ prediction, index }) => {\r\n//   const [isOpen, setIsOpen] = useState(false);\r\n\r\n//   return (\r\n//     <div className=\"prediction-panel bg-gray-100 p-4 rounded-lg shadow-md\">\r\n//       {/* Dropdown Header */}\r\n//       <div\r\n//         className=\"flex justify-between items-center cursor-pointer\"\r\n//         onClick={() => setIsOpen(!isOpen)}\r\n//       >\r\n//         <h3 className=\"text-lg font-bold\">\r\n//           Prediction {index + 1} - Class: {prediction.class}\r\n//         </h3>\r\n//         <button className=\"text-gray-500\">{isOpen ? \"▲\" : \"▼\"}</button>\r\n//       </div>\r\n\r\n//       {/* Dropdown Content */}\r\n//       {isOpen && (\r\n//         <div className=\"mt-4 space-y-2\">\r\n//           <p>\r\n//             <strong>X:</strong> {prediction.x}\r\n//           </p>\r\n//           <p>\r\n//             <strong>Y:</strong> {prediction.y}\r\n//           </p>\r\n//           <p>\r\n//             <strong>Confidence:</strong> {Math.round(prediction.confidence * 100)}%\r\n//           </p>\r\n//           <p>\r\n//             <strong>Class:</strong> {prediction.class}\r\n//           </p>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AIPanel;\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}